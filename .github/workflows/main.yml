# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-ade-image:
    runs-on: ubuntu-18.04
    container:
      image: docker:dind

    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    - name: Print tree
      run: |
        pwd
        echo 'PWD'
        find
        apk add --update-cache git
    - name: Build ADE image
      run: |
        set -x
        export CI_COMMIT_SHA=${{ github.sha }}
        export CI_COMMIT_REF_SLUG=$(echo ${{ github.head_ref }} | cut -d/ -f2- | tr "[:upper:]" "[:lower:]" | sed "s/[^[:alnum:]-]/-/g")
        export CI_REGISTRY=index.docker.io
        export CI_REGISTRY_IMAGE="$CI_REGISTRY/${{ github.repository }}"
        export CI_JOB_TOKEN=${{ secrets.GITHUB_TOKEN }}
        export CI_USERNAME=tier4ci
        echo "TOKEN $CI_JOB_TOKEN -- $CI_USERNAME .. $CI_REGISTRY =="
        echo "GITHUB_REF == $GITHUB_REF ---"
        echo "GITHUB_HEAD_REF == ${{ github.head_ref }} ---"
        echo "GITHUB_BASE_REF == ${{ github.base_ref }} ---"
        apk add --update-cache git
        cd tools/ade_image
        docker login -u $CI_USERNAME -p $CI_JOB_TOKEN $CI_REGISTRY
        if [[ -n "$FORCE" ]]; then
            chmod og-w . -R;
            docker build --label ade_image_commit_sha="$CI_COMMIT_SHA" -t image .;
        else
            (
                docker pull $CI_REGISTRY_IMAGE${ARCH}ade:commit-$CI_COMMIT_SHA &&
                docker tag $CI_REGISTRY_IMAGE${ARCH}ade:commit-$CI_COMMIT_SHA image
            ) || (
                chmod og-w . -R;
                docker build --label ade_image_commit_sha="$CI_COMMIT_SHA" -t image .;
            );
        fi
        docker tag image $CI_REGISTRY_IMAGE${ARCH}ade:commit-$CI_COMMIT_SHA
        docker tag image $CI_REGISTRY_IMAGE${ARCH}ade:$CI_COMMIT_REF_SLUG
        docker push $CI_REGISTRY_IMAGE${ARCH}ade:commit-$CI_COMMIT_SHA
        docker push $CI_REGISTRY_IMAGE${ARCH}ade:$CI_COMMIT_REF_SLUG

  build-linux-ade:
    needs: build-ade-image
    runs-on: ubuntu-18.04
    container:
      image: index.docker.io/${{ github.repository }}ade:commit-${{ github.sha }}
    steps:
      - name: Build AutowareArchitectureProposal
        run: |
          apt-get update && apt-get -y --no-install-recommends install git clang-tidy
          git lfs pull --include="*" --exclude=""

          colcon build --merge-install --install-base /opt/AutowareArchitectureProposal

          colcon test --merge-install --install-base /opt/AutowareArchitectureProposal --return-code-on-test-failure

          colcon test-result --all |grep xml |cut -d":" -f1 |xargs .gitlab-ci/merge-test-results test-results.xml || true
          colcon test-result --verbose

          mkdir /opt/AutowareArchitectureProposal/src
          (cd src && git archive --format=tar HEAD | (cd /opt/AutowareArchitectureProposal/src && tar xf -))
          cp -a LICENSE /opt/AutowareArchitectureProposal
          chmod -R og-w /opt/AutowareArchitectureProposal
          tar cfz opt.tar.gz /opt/AutowareArchitectureProposal

      - name: Persist artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-data
          path: |
            log/**/*
            opt.tar.gz

  create-volume:
    runs-on: ubuntu-18.04
    container:
      image: docker:dind

    steps:
    - name: Create Volume
      run: |
        set -x
        export CI_COMMIT_SHA=${{ github.sha }}
        export CI_COMMIT_REF_SLUG=$(echo ${{ github.head_ref }} | cut -d/ -f2- | tr "[:upper:]" "[:lower:]" | sed "s/[^[:alnum:]-]/-/g")
        export CI_REGISTRY=index.docker.io
        export CI_REGISTRY_IMAGE="$CI_REGISTRY/${{ github.repository }}"

        echo -e "*\n!opt.tar.gz" > .dockerignore

        cat >Dockerfile <<EOF
        FROM alpine
        ADD opt.tar.gz /
        VOLUME /opt/AutowareAuto
        CMD ["/bin/sh", "-c", "trap 'exit 147' TERM; tail -f /dev/null & wait ${!}"]
        EOF

        docker build --label ade_image_commit_sha="$CI_COMMIT_SHA" -t image .
        docker login -u tier4ci -p $CI_JOB_TOKEN
        docker tag image $CI_REGISTRY_IMAGE$ARCH:commit-$CI_COMMIT_SHA
        docker tag image $CI_REGISTRY_IMAGE$ARCH:$CI_COMMIT_REF_SLUG
        docker push $CI_REGISTRY_IMAGE$ARCH:commit-${{ github.sha }}
        docker push $CI_REGISTRY_IMAGE$ARCH:$CI_COMMIT_REF_SLUG
